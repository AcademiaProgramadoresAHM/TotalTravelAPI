// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using AHM.Total.Travel.Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace AHM.Total.Travel.DataAccess.Context
{
    public partial class totaltravel_DBContext : DbContext
    {
        public totaltravel_DBContext()
        {
        }

        public totaltravel_DBContext(DbContextOptions<totaltravel_DBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<VW_tbActividades> VW_tbActividades { get; set; }
        public virtual DbSet<VW_tbActividadesExtras> VW_tbActividadesExtras { get; set; }
        public virtual DbSet<VW_tbCategoriasHabitaciones> VW_tbCategoriasHabitaciones { get; set; }
        public virtual DbSet<VW_tbCiudades> VW_tbCiudades { get; set; }
        public virtual DbSet<VW_tbDestinosTransportes> VW_tbDestinosTransportes { get; set; }
        public virtual DbSet<VW_tbDetallesTransportes> VW_tbDetallesTransportes { get; set; }
        public virtual DbSet<VW_tbDirecciones> VW_tbDirecciones { get; set; }
        public virtual DbSet<VW_tbHabitaciones> VW_tbHabitaciones { get; set; }
        public virtual DbSet<VW_tbHorariosTransportes> VW_tbHorariosTransportes { get; set; }
        public virtual DbSet<VW_tbHoteles> VW_tbHoteles { get; set; }
        public virtual DbSet<VW_tbHotelesActividades> VW_tbHotelesActividades { get; set; }
        public virtual DbSet<VW_tbHotelesMenus> VW_tbHotelesMenus { get; set; }
        public virtual DbSet<VW_tbMenus> VW_tbMenus { get; set; }
        public virtual DbSet<VW_tbPaises> VW_tbPaises { get; set; }
        public virtual DbSet<VW_tbPaquetePredeterminados> VW_tbPaquetePredeterminados { get; set; }
        public virtual DbSet<VW_tbPaquetePredeterminadosDetalles> VW_tbPaquetePredeterminadosDetalles { get; set; }
        public virtual DbSet<VW_tbPaquetesHabitaciones> VW_tbPaquetesHabitaciones { get; set; }
        public virtual DbSet<VW_tbPartners> VW_tbPartners { get; set; }
        public virtual DbSet<VW_tbPermisos> VW_tbPermisos { get; set; }
        public virtual DbSet<VW_tbRegistrosPagos> VW_tbRegistrosPagos { get; set; }
        public virtual DbSet<VW_tbReservacionRestaurante> VW_tbReservacionRestaurante { get; set; }
        public virtual DbSet<VW_tbReservacionTransporte> VW_tbReservacionTransporte { get; set; }
        public virtual DbSet<VW_tbReservaciones> VW_tbReservaciones { get; set; }
        public virtual DbSet<VW_tbReservacionesActividadesExtras> VW_tbReservacionesActividadesExtras { get; set; }
        public virtual DbSet<VW_tbReservacionesActividadesHoteles> VW_tbReservacionesActividadesHoteles { get; set; }
        public virtual DbSet<VW_tbReservacionesDetalles> VW_tbReservacionesDetalles { get; set; }
        public virtual DbSet<VW_tbReservacionesHoteles> VW_tbReservacionesHoteles { get; set; }
        public virtual DbSet<VW_tbRestaurantes> VW_tbRestaurantes { get; set; }
        public virtual DbSet<VW_tbRoles> VW_tbRoles { get; set; }
        public virtual DbSet<VW_tbRolesPermisos> VW_tbRolesPermisos { get; set; }
        public virtual DbSet<VW_tbTipoPartners> VW_tbTipoPartners { get; set; }
        public virtual DbSet<VW_tbTiposActividades> VW_tbTiposActividades { get; set; }
        public virtual DbSet<VW_tbTiposMenus> VW_tbTiposMenus { get; set; }
        public virtual DbSet<VW_tbTiposPagos> VW_tbTiposPagos { get; set; }
        public virtual DbSet<VW_tbTiposTransportes> VW_tbTiposTransportes { get; set; }
        public virtual DbSet<VW_tbTransportes> VW_tbTransportes { get; set; }
        public virtual DbSet<VW_tbUsuarios> VW_tbUsuarios { get; set; }
        public virtual DbSet<tbActividades> tbActividades { get; set; }
        public virtual DbSet<tbActividadesExtras> tbActividadesExtras { get; set; }
        public virtual DbSet<tbCategoriasHabitaciones> tbCategoriasHabitaciones { get; set; }
        public virtual DbSet<tbCiudades> tbCiudades { get; set; }
        public virtual DbSet<tbDestinosTransportes> tbDestinosTransportes { get; set; }
        public virtual DbSet<tbDetallesTransportes> tbDetallesTransportes { get; set; }
        public virtual DbSet<tbDirecciones> tbDirecciones { get; set; }
        public virtual DbSet<tbHabitaciones> tbHabitaciones { get; set; }
        public virtual DbSet<tbHorariosTransportes> tbHorariosTransportes { get; set; }
        public virtual DbSet<tbHoteles> tbHoteles { get; set; }
        public virtual DbSet<tbHotelesActividades> tbHotelesActividades { get; set; }
        public virtual DbSet<tbHotelesMenus> tbHotelesMenus { get; set; }
        public virtual DbSet<tbMenus> tbMenus { get; set; }
        public virtual DbSet<tbPaises> tbPaises { get; set; }
        public virtual DbSet<tbPaquetePredeterminados> tbPaquetePredeterminados { get; set; }
        public virtual DbSet<tbPaquetePredeterminadosDetalles> tbPaquetePredeterminadosDetalles { get; set; }
        public virtual DbSet<tbPaquetesHabitaciones> tbPaquetesHabitaciones { get; set; }
        public virtual DbSet<tbPartners> tbPartners { get; set; }
        public virtual DbSet<tbPermisos> tbPermisos { get; set; }
        public virtual DbSet<tbRegistrosPagos> tbRegistrosPagos { get; set; }
        public virtual DbSet<tbReservacionRestaurantes> tbReservacionRestaurantes { get; set; }
        public virtual DbSet<tbReservacionTransporte> tbReservacionTransporte { get; set; }
        public virtual DbSet<tbReservaciones> tbReservaciones { get; set; }
        public virtual DbSet<tbReservacionesActividadesExtras> tbReservacionesActividadesExtras { get; set; }
        public virtual DbSet<tbReservacionesActividadesHoteles> tbReservacionesActividadesHoteles { get; set; }
        public virtual DbSet<tbReservacionesDetalles> tbReservacionesDetalles { get; set; }
        public virtual DbSet<tbReservacionesHoteles> tbReservacionesHoteles { get; set; }
        public virtual DbSet<tbRestaurantes> tbRestaurantes { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbRolesPermisos> tbRolesPermisos { get; set; }
        public virtual DbSet<tbTipoMenus> tbTipoMenus { get; set; }
        public virtual DbSet<tbTipoPartners> tbTipoPartners { get; set; }
        public virtual DbSet<tbTiposActividades> tbTiposActividades { get; set; }
        public virtual DbSet<tbTiposPagos> tbTiposPagos { get; set; }
        public virtual DbSet<tbTiposTransportes> tbTiposTransportes { get; set; }
        public virtual DbSet<tbTransportes> tbTransportes { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<VW_tbActividades>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbActividades", "Actv");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCrea)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbActividadesExtras>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbActividadesExtras", "Actv");

                entity.Property(e => e.Actividad)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion).IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Partner)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Precio).HasColumnType("money");

                entity.Property(e => e.UsuarioCrea)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbCategoriasHabitaciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCategoriasHabitaciones", "Htel");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");
            });

            modelBuilder.Entity<VW_tbCiudades>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCiudades", "Gene");

                entity.Property(e => e.Ciudad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Pais)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCrea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbDestinosTransportes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbDestinosTransportes", "Trpt");

                entity.Property(e => e.CiudadDestino)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CiudadSalida)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.UsuarioCreacionID)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModificaID)
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbDetallesTransportes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbDetallesTransportes", "Trpt");

                entity.Property(e => e.Fecha).HasColumnType("date");

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Hora_Llegada)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Hora_Salida)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Matricula)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Precio).HasColumnType("money");

                entity.Property(e => e.Transporte)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbDirecciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbDirecciones", "Gene");

                entity.Property(e => e.Ciudad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Pais)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCrea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbHabitaciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbHabitaciones", "Htel");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Habitacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Hotel)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Precio).HasColumnType("money");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbHorariosTransportes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbHorariosTransportes", "Trpt");

                entity.Property(e => e.Ciudad_Destino)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ciudad_Salida)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha).HasColumnType("date");

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Hora_Llegada)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Hora_Salida)
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbHoteles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbHoteles", "Htel");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Hotel)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Partners)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbHotelesActividades>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbHotelesActividades", "Htel");

                entity.Property(e => e.Actividad)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion).IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Hotel)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Precio).HasColumnType("money");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbHotelesMenus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbHotelesMenus", "Htel");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Hotel)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Menu)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Precio).HasColumnType("money");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbMenus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbMenus", "Rest");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Menu)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Precio).HasColumnType("money");

                entity.Property(e => e.Restaurante)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoMenu)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbPaises>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPaises", "Gene");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pais)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbPaquetePredeterminados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPaquetePredeterminados", "Sale");

                entity.Property(e => e.Descripcion_Hotel)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion_Paquete).IsUnicode(false);

                entity.Property(e => e.Duracion_Paquete)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifcia).HasColumnType("datetime");

                entity.Property(e => e.Hotel)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Restaurante)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Creacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Modifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbPaquetePredeterminadosDetalles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPaquetePredeterminadosDetalles", "Sale");

                entity.Property(e => e.DescripcionActividad)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.DescripcionPaquete).IsUnicode(false);

                entity.Property(e => e.DuracionPaquete)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.NombrePaquete)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbPaquetesHabitaciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPaquetesHabitaciones", "Sale");

                entity.Property(e => e.Categoria_Habitacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Habitacion_Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Habitacion_Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Habitacion_Precio).HasColumnType("money");

                entity.Property(e => e.Hotel_Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre_Hotel)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbPartners>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPartners", "Gene");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.TipoPartner)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbPermisos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPermisos", "Acce");

                entity.Property(e => e.Action)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Controlador)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Icono)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbRegistrosPagos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRegistrosPagos", "Resv");

                entity.Property(e => e.Apellido)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DNI)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.MontoPago).HasColumnType("money");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TipoPago)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.fechaPago).HasColumnType("date");
            });

            modelBuilder.Entity<VW_tbReservacionRestaurante>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReservacionRestaurante", "Resv");

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Reservacion).HasColumnType("date");

                entity.Property(e => e.Hora_Reservacion)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Restaurante)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Creacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Modifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbReservacionTransporte>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReservacionTransporte", "Resv");

                entity.Property(e => e.Fecha_Cancelado).HasColumnType("date");

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Precio).HasColumnType("money");

                entity.Property(e => e.Usuario_Creacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Modifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbReservaciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReservaciones", "Resv");

                entity.Property(e => e.Apellido)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DNI)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.precio).HasColumnType("money");
            });

            modelBuilder.Entity<VW_tbReservacionesActividadesExtras>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReservacionesActividadesExtras", "Resv");

                entity.Property(e => e.Actividad_Extra).IsUnicode(false);

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Reservacion).HasColumnType("date");

                entity.Property(e => e.Hora_Reservacion)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Creacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Modifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbReservacionesActividadesHoteles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReservacionesActividadesHoteles", "Resv");

                entity.Property(e => e.Actividad).IsUnicode(false);

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Reservacion).HasColumnType("date");

                entity.Property(e => e.Hora_Reservacion)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Creacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Modifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbReservacionesDetalles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReservacionesDetalles", "Resv");

                entity.Property(e => e.Categoria_Habitacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion_Habitacion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Entrada).HasColumnType("date");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Salida).HasColumnType("date");

                entity.Property(e => e.Hotel)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre_Habitacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Precio_Habitacion).HasColumnType("money");

                entity.Property(e => e.Precio_ReservacionHotel).HasColumnType("money");

                entity.Property(e => e.Usuario_Creacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Modifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbReservacionesHoteles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbReservacionesHoteles", "Resv");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Entrada).HasColumnType("date");

                entity.Property(e => e.Fecha_Salida).HasColumnType("date");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbRestaurantes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRestaurantes", "Rest");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Partner)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Restaurante)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbRoles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRoles", "Acce");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbRolesPermisos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRolesPermisos", "Acce");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Permiso)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rol)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbTipoPartners>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTipoPartners", "Gene");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Rol_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Creacion_Nombre)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario_Modifica_Nombre)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbTiposActividades>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposActividades", "Actv");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.UsuarioCrea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbTiposMenus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposMenus", "Rest");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbTiposPagos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposPagos", "Sale");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbTiposTransportes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposTransportes", "Trpt");

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.ID).ValueGeneratedOnAdd();

                entity.Property(e => e.Trasporte)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbTransportes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTransportes", "Trpt");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.NombrePartner)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoTransporte)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_tbUsuarios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbUsuarios", "Acce");

                entity.Property(e => e.DNI)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Fecha_Nacimiento).HasColumnType("date");

                entity.Property(e => e.Genero)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Partner)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Password).IsUnicode(false);

                entity.Property(e => e.Rol)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(101)
                    .IsUnicode(false);

                entity.Property(e => e.nombre_completo)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tbActividades>(entity =>
            {
                entity.HasKey(e => e.Actv_ID)
                    .HasName("PK__tbActivi__E5CC828166D5FA02");

                entity.ToTable("tbActividades", "Actv");

                entity.Property(e => e.Actv_Descripcion)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.Actv_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Actv_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Actv_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Actv_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbActividadesActv_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Actv_UsuarioCreacion)
                    .HasConstraintName("FK_tbActividades_tbUsuarios_Actc_UsuarioCreacion");

                entity.HasOne(d => d.Actv_UsuarioModificaNavigation)
                    .WithMany(p => p.tbActividadesActv_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Actv_UsuarioModifica)
                    .HasConstraintName("FK_tbActividades_tbUsuarios_Actc_UsuarioModifica");

                entity.HasOne(d => d.TiAc)
                    .WithMany(p => p.tbActividades)
                    .HasForeignKey(d => d.TiAc_ID);
            });

            modelBuilder.Entity<tbActividadesExtras>(entity =>
            {
                entity.HasKey(e => e.AcEx_ID)
                    .HasName("PK__tbActivi__30F038199C4537CA");

                entity.ToTable("tbActividadesExtras", "Actv");

                entity.Property(e => e.AcEx_Descripcion).IsUnicode(false);

                entity.Property(e => e.AcEx_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.AcEx_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AcEx_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.AcEx_Precio).HasColumnType("money");

                entity.HasOne(d => d.AcEx_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbActividadesExtrasAcEx_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.AcEx_UsuarioCreacion);

                entity.HasOne(d => d.AcEx_UsuarioModificaNavigation)
                    .WithMany(p => p.tbActividadesExtrasAcEx_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.AcEx_UsuarioModifica);

                entity.HasOne(d => d.Actv)
                    .WithMany(p => p.tbActividadesExtras)
                    .HasForeignKey(d => d.Actv_ID);

                entity.HasOne(d => d.Part)
                    .WithMany(p => p.tbActividadesExtras)
                    .HasForeignKey(d => d.Part_ID);
            });

            modelBuilder.Entity<tbCategoriasHabitaciones>(entity =>
            {
                entity.HasKey(e => e.CaHa_ID)
                    .HasName("PK__tbCatego__D14A1D8794787AD8");

                entity.ToTable("tbCategoriasHabitaciones", "Htel");

                entity.Property(e => e.CaHa_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CaHa_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.CaHa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CaHa_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.CaHa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCategoriasHabitacionesCaHa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.CaHa_UsuarioCreacion)
                    .HasConstraintName("FK_tbCategoriasHabitaciones_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.CaHa_UsuarioModificaNavigation)
                    .WithMany(p => p.tbCategoriasHabitacionesCaHa_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.CaHa_UsuarioModifica)
                    .HasConstraintName("FK_tbCategoriasHabitaciones_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbCiudades>(entity =>
            {
                entity.HasKey(e => e.Ciud_ID)
                    .HasName("PK__tbCiudad__D04530A8E2F0A90F");

                entity.ToTable("tbCiudades", "Gene");

                entity.Property(e => e.Ciud_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ciud_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Ciud_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ciud_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Ciud_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCiudadesCiud_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Ciud_UsuarioCreacion)
                    .HasConstraintName("FK_tbCiudades_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Ciud_UsuarioModificaNavigation)
                    .WithMany(p => p.tbCiudadesCiud_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Ciud_UsuarioModifica)
                    .HasConstraintName("FK_tbCiudades_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Pais)
                    .WithMany(p => p.tbCiudades)
                    .HasForeignKey(d => d.Pais_ID);
            });

            modelBuilder.Entity<tbDestinosTransportes>(entity =>
            {
                entity.HasKey(e => e.DsTr_ID)
                    .HasName("PK__tbDestin__8D3D09A2AFD13CAD");

                entity.ToTable("tbDestinosTransportes", "Trpt");

                entity.Property(e => e.DsTr_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.DsTr_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DsTr_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.DsTr_CiudadDestinoNavigation)
                    .WithMany(p => p.tbDestinosTransportesDsTr_CiudadDestinoNavigation)
                    .HasForeignKey(d => d.DsTr_CiudadDestino)
                    .HasConstraintName("FK_tbDestinosTransportes_tbCiudades_Ciudad_Destino");

                entity.HasOne(d => d.DsTr_CiudadSalidaNavigation)
                    .WithMany(p => p.tbDestinosTransportesDsTr_CiudadSalidaNavigation)
                    .HasForeignKey(d => d.DsTr_CiudadSalida)
                    .HasConstraintName("FK_tbDestinosTransportes_tbCiudades_Ciudad_Salida");

                entity.HasOne(d => d.DsTr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDestinosTransportesDsTr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.DsTr_UsuarioCreacion)
                    .HasConstraintName("FK_tbDestinosTransportes_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.DsTr_UsuarioModificaNavigation)
                    .WithMany(p => p.tbDestinosTransportesDsTr_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.DsTr_UsuarioModifica)
                    .HasConstraintName("FK_tbDestinosTransportes_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbDetallesTransportes>(entity =>
            {
                entity.HasKey(e => e.DeTr_ID)
                    .HasName("PK__tbDetall__F5E4BFD58EA1F19A");

                entity.ToTable("tbDetallesTransportes", "Trpt");

                entity.Property(e => e.DeTr_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.DeTr_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeTr_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.DeTr_Matricula)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DeTr_Precio).HasColumnType("money");

                entity.HasOne(d => d.DeTr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDetallesTransportesDeTr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.DeTr_UsuarioCreacion)
                    .HasConstraintName("FK_tbDetallesTransportes_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.DeTr_UsuarioModificaNavigation)
                    .WithMany(p => p.tbDetallesTransportesDeTr_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.DeTr_UsuarioModifica)
                    .HasConstraintName("FK_tbDetallesTransportes_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.HoTr)
                    .WithMany(p => p.tbDetallesTransportes)
                    .HasForeignKey(d => d.HoTr_ID);

                entity.HasOne(d => d.Tprt)
                    .WithMany(p => p.tbDetallesTransportes)
                    .HasForeignKey(d => d.Tprt_ID);
            });

            modelBuilder.Entity<tbDirecciones>(entity =>
            {
                entity.HasKey(e => e.Dire_ID)
                    .HasName("PK__tbDirecc__011551324199ABDA");

                entity.ToTable("tbDirecciones", "Gene");

                entity.Property(e => e.Dire_Descripcion)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Dire_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Dire_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Dire_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Ciud)
                    .WithMany(p => p.tbDirecciones)
                    .HasForeignKey(d => d.Ciud_ID);

                entity.HasOne(d => d.Dire_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDireccionesDire_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Dire_UsuarioCreacion)
                    .HasConstraintName("FK_tbDirecciones_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Dire_UsuarioModificaNavigation)
                    .WithMany(p => p.tbDireccionesDire_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Dire_UsuarioModifica)
                    .HasConstraintName("FK_tbDirecciones_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbHabitaciones>(entity =>
            {
                entity.HasKey(e => e.Habi_ID)
                    .HasName("PK__tbHabita__9183574E8CFAC5A2");

                entity.ToTable("tbHabitaciones", "Htel");

                entity.Property(e => e.Habi_Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Habi_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Habi_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Habi_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Habi_Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Habi_Precio).HasColumnType("money");

                entity.Property(e => e.Habi_url)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.CaHa)
                    .WithMany(p => p.tbHabitaciones)
                    .HasForeignKey(d => d.CaHa_ID);

                entity.HasOne(d => d.Habi_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbHabitacionesHabi_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Habi_UsuarioCreacion)
                    .HasConstraintName("FK_tbHabitaciones_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Habi_UsuarioModificaNavigation)
                    .WithMany(p => p.tbHabitacionesHabi_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Habi_UsuarioModifica)
                    .HasConstraintName("FK_tbHabitaciones_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Hote)
                    .WithMany(p => p.tbHabitaciones)
                    .HasForeignKey(d => d.Hote_ID);
            });

            modelBuilder.Entity<tbHorariosTransportes>(entity =>
            {
                entity.HasKey(e => e.HoTr_ID)
                    .HasName("PK__tbHorari__570BB7B767838451");

                entity.ToTable("tbHorariosTransportes", "Trpt");

                entity.Property(e => e.HoTr_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.HoTr_Fecha).HasColumnType("date");

                entity.Property(e => e.HoTr_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.HoTr_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.HoTr_HoraLlegada)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.HoTr_HoraSalida)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.DsTr)
                    .WithMany(p => p.tbHorariosTransportes)
                    .HasForeignKey(d => d.DsTr_ID)
                    .HasConstraintName("FK_tbHorariosTransportes_tbDestinosTransporte_DsTr_ID");

                entity.HasOne(d => d.HoTr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbHorariosTransportesHoTr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.HoTr_UsuarioCreacion)
                    .HasConstraintName("FK_tbHorariosTransportes_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.HoTr_UsuarioModificaNavigation)
                    .WithMany(p => p.tbHorariosTransportesHoTr_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.HoTr_UsuarioModifica)
                    .HasConstraintName("FK_tbHorariosTransportes_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbHoteles>(entity =>
            {
                entity.HasKey(e => e.Hote_ID)
                    .HasName("PK__tbHotele__297BB7032C998057");

                entity.ToTable("tbHoteles", "Htel");

                entity.Property(e => e.Hote_Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Hote_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Hote_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Hote_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Hote_Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Hote_Url)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.Dire)
                    .WithMany(p => p.tbHoteles)
                    .HasForeignKey(d => d.Dire_ID);

                entity.HasOne(d => d.Hote_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbHotelesHote_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Hote_UsuarioCreacion)
                    .HasConstraintName("FK_tbHoteles_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Hote_UsuarioModificaNavigation)
                    .WithMany(p => p.tbHotelesHote_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Hote_UsuarioModifica)
                    .HasConstraintName("FK_tbHoteles_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Part)
                    .WithMany(p => p.tbHoteles)
                    .HasForeignKey(d => d.Part_ID);
            });

            modelBuilder.Entity<tbHotelesActividades>(entity =>
            {
                entity.HasKey(e => e.HoAc_ID)
                    .HasName("PK__tbHotele__E62B14C82D809E1D");

                entity.ToTable("tbHotelesActividades", "Htel");

                entity.Property(e => e.HoAc_Descripcion).IsUnicode(false);

                entity.Property(e => e.HoAc_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.HoAc_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.HoAc_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.HoAc_Precio).HasColumnType("money");

                entity.HasOne(d => d.Actv)
                    .WithMany(p => p.tbHotelesActividades)
                    .HasForeignKey(d => d.Actv_ID);

                entity.HasOne(d => d.HoAc_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbHotelesActividadesHoAc_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.HoAc_UsuarioCreacion)
                    .HasConstraintName("FK_tbHotelesActividades_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.HoAc_UsuarioModificaNavigation)
                    .WithMany(p => p.tbHotelesActividadesHoAc_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.HoAc_UsuarioModifica)
                    .HasConstraintName("FK_tbHotelesActividades_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Hote)
                    .WithMany(p => p.tbHotelesActividades)
                    .HasForeignKey(d => d.Hote_ID);
            });

            modelBuilder.Entity<tbHotelesMenus>(entity =>
            {
                entity.HasKey(e => e.HoMe_ID)
                    .HasName("PK__tbHotele__A3E8B056657A900B");

                entity.ToTable("tbHotelesMenus", "Htel");

                entity.Property(e => e.HoMe_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.HoMe_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.HoMe_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.HoMe_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.HoMe_Precio).HasColumnType("money");

                entity.HasOne(d => d.HoMe_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbHotelesMenusHoMe_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.HoMe_UsuarioCreacion)
                    .HasConstraintName("FK_tbHotelesMenus_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.HoMe_UsuarioModificaNavigation)
                    .WithMany(p => p.tbHotelesMenusHoMe_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.HoMe_UsuarioModifica)
                    .HasConstraintName("FK_tbHotelesMenus_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Hote)
                    .WithMany(p => p.tbHotelesMenus)
                    .HasForeignKey(d => d.Hote_ID);

                entity.HasOne(d => d.Time)
                    .WithMany(p => p.tbHotelesMenus)
                    .HasForeignKey(d => d.Time_ID);
            });

            modelBuilder.Entity<tbMenus>(entity =>
            {
                entity.HasKey(e => e.Menu_ID)
                    .HasName("PK__tbMenus__69E7231882D81340");

                entity.ToTable("tbMenus", "Rest");

                entity.Property(e => e.Menu_Descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Menu_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Menu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Menu_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Menu_Nombre)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Menu_Precio).HasColumnType("money");

                entity.HasOne(d => d.Menu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMenusMenu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Menu_UsuarioCreacion)
                    .HasConstraintName("FK_tbMenu_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Menu_UsuarioModificaNavigation)
                    .WithMany(p => p.tbMenusMenu_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Menu_UsuarioModifica)
                    .HasConstraintName("FK_tbMenu_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Rest)
                    .WithMany(p => p.tbMenus)
                    .HasForeignKey(d => d.Rest_ID)
                    .HasConstraintName("FK_tbMenu_tbRestaurante_Rest_ID");

                entity.HasOne(d => d.Time)
                    .WithMany(p => p.tbMenus)
                    .HasForeignKey(d => d.Time_ID)
                    .HasConstraintName("FK_tbMenu_tbTipoMenu_Tme_ID");
            });

            modelBuilder.Entity<tbPaises>(entity =>
            {
                entity.HasKey(e => e.Pais_ID)
                    .HasName("PK__tbPaises__6356B853DE13ADD0");

                entity.ToTable("tbPaises", "Gene");

                entity.HasIndex(e => e.Pais_Codigo, "UQ__tbPaises__BC5364F99891626A")
                    .IsUnique();

                entity.Property(e => e.Pais_Codigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Pais_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pais_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Pais_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Pais_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Pais_Nacionalidad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Pais_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPaisesPais_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Pais_UsuarioCreacion)
                    .HasConstraintName("FK_tbPaises_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Pais_UsuarioModificaNavigation)
                    .WithMany(p => p.tbPaisesPais_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Pais_UsuarioModifica)
                    .HasConstraintName("FK_tbPaises_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbPaquetePredeterminados>(entity =>
            {
                entity.HasKey(e => e.Paqu_ID)
                    .HasName("PK__tbPaquet__39E5491D51910D2D");

                entity.ToTable("tbPaquetePredeterminados", "Sale");

                entity.Property(e => e.Paqu_Descripcion).IsUnicode(false);

                entity.Property(e => e.Paqu_Duracion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Paqu_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Paqu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Paqu_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Paqu_Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Hote)
                    .WithMany(p => p.tbPaquetePredeterminados)
                    .HasForeignKey(d => d.Hote_ID)
                    .HasConstraintName("FK_tbPaquetes_tbHoteles_Hote_ID");

                entity.HasOne(d => d.Paqu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPaquetePredeterminadosPaqu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Paqu_UsuarioCreacion)
                    .HasConstraintName("FK_tbPaquetes_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Paqu_UsuarioModificaNavigation)
                    .WithMany(p => p.tbPaquetePredeterminadosPaqu_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Paqu_UsuarioModifica)
                    .HasConstraintName("FK_tbPaquetes_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Rest)
                    .WithMany(p => p.tbPaquetePredeterminados)
                    .HasForeignKey(d => d.Rest_ID)
                    .HasConstraintName("FK_tbPaquetes_tbRestaurantes_Rest_ID");
            });

            modelBuilder.Entity<tbPaquetePredeterminadosDetalles>(entity =>
            {
                entity.HasKey(e => e.PaDe_ID)
                    .HasName("PK__tbPaquet__5C22A181B1955F7A");

                entity.ToTable("tbPaquetePredeterminadosDetalles", "Sale");

                entity.Property(e => e.PaDe_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.PaDe_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaDe_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Actv)
                    .WithMany(p => p.tbPaquetePredeterminadosDetalles)
                    .HasForeignKey(d => d.Actv_ID);

                entity.HasOne(d => d.PaDe_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPaquetePredeterminadosDetallesPaDe_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.PaDe_UsuarioCreacion)
                    .HasConstraintName("FK_tbPaquetePredeterminadosDetalles_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.PaDe_UsuarioModificaNavigation)
                    .WithMany(p => p.tbPaquetePredeterminadosDetallesPaDe_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.PaDe_UsuarioModifica)
                    .HasConstraintName("FK_tbPaquetePredeterminadosDetalles_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Paqu)
                    .WithMany(p => p.tbPaquetePredeterminadosDetalles)
                    .HasForeignKey(d => d.Paqu_ID);
            });

            modelBuilder.Entity<tbPaquetesHabitaciones>(entity =>
            {
                entity.HasKey(e => e.PaHa_Id)
                    .HasName("PK__tbPaquet__4EE768E7D2FB3BA3");

                entity.ToTable("tbPaquetesHabitaciones", "Sale");

                entity.Property(e => e.PaHa_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.PaHa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaHa_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Habi)
                    .WithMany(p => p.tbPaquetesHabitaciones)
                    .HasForeignKey(d => d.Habi_Id);

                entity.HasOne(d => d.PaHa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPaquetesHabitacionesPaHa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.PaHa_UsuarioCreacion);

                entity.HasOne(d => d.PaHa_UsuarioModificaNavigation)
                    .WithMany(p => p.tbPaquetesHabitacionesPaHa_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.PaHa_UsuarioModifica);

                entity.HasOne(d => d.Paqu)
                    .WithMany(p => p.tbPaquetesHabitaciones)
                    .HasForeignKey(d => d.Paqu_Id)
                    .HasConstraintName("FK_tbPaquetesHabitaciones_tbPaquetesPredeterminados_Paqu_Id");
            });

            modelBuilder.Entity<tbPartners>(entity =>
            {
                entity.HasKey(e => e.Part_ID)
                    .HasName("PK__tbPartne__14CFF4704994CBE1");

                entity.ToTable("tbPartners", "Gene");

                entity.Property(e => e.Part_Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Part_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Part_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Part_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Part_Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Part_Telefono)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Part_Url)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.Part_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPartnersPart_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Part_UsuarioCreacion)
                    .HasConstraintName("FK_tbPartners_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Part_UsuarioModificaNavigation)
                    .WithMany(p => p.tbPartnersPart_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Part_UsuarioModifica)
                    .HasConstraintName("FK_tbPartners_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.TiPart)
                    .WithMany(p => p.tbPartners)
                    .HasForeignKey(d => d.TiPart_Id);
            });

            modelBuilder.Entity<tbPermisos>(entity =>
            {
                entity.HasKey(e => e.Perm_ID)
                    .HasName("PK__tbPermis__4C3E538DE96124E1");

                entity.ToTable("tbPermisos", "Acce");

                entity.Property(e => e.Perm_Action)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Perm_Controlador)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Perm_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Perm_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Perm_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Perm_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Perm_Icono)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Perm_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPermisosPerm_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Perm_UsuarioCreacion)
                    .HasConstraintName("FK_tbPermisos_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Perm_UsuarioModificaNavigation)
                    .WithMany(p => p.tbPermisosPerm_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Perm_UsuarioModifica)
                    .HasConstraintName("FK_tbPermisos_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbRegistrosPagos>(entity =>
            {
                entity.HasKey(e => e.RePa_ID)
                    .HasName("PK__tbRegist__78BD24BA04774DB9");

                entity.ToTable("tbRegistrosPagos", "Resv");

                entity.Property(e => e.RePa_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.RePa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RePa_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.RePa_FechaPago).HasColumnType("date");

                entity.Property(e => e.RePa_Monto).HasColumnType("money");

                entity.HasOne(d => d.RePa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRegistrosPagosRePa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.RePa_UsuarioCreacion)
                    .HasConstraintName("FK_tbRegistrosPagos_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.RePa_UsuarioModificaNavigation)
                    .WithMany(p => p.tbRegistrosPagosRePa_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.RePa_UsuarioModifica)
                    .HasConstraintName("FK_tbRegistrosPagos_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Resv)
                    .WithMany(p => p.tbRegistrosPagos)
                    .HasForeignKey(d => d.Resv_ID);

                entity.HasOne(d => d.TiPa)
                    .WithMany(p => p.tbRegistrosPagos)
                    .HasForeignKey(d => d.TiPa_ID);
            });

            modelBuilder.Entity<tbReservacionRestaurantes>(entity =>
            {
                entity.HasKey(e => e.ReRe_ID)
                    .HasName("PK__tbReserv__0DFE33EB10C9F667");

                entity.ToTable("tbReservacionRestaurantes", "Resv");

                entity.Property(e => e.ReRe_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.ReRe_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReRe_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.ReRe_FechaReservacion).HasColumnType("date");

                entity.Property(e => e.ReRe_HoraReservacion)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.ReRe_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbReservacionRestaurantesReRe_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.ReRe_UsuarioCreacion)
                    .HasConstraintName("FK_tbReservacionRestaurante_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.ReRe_UsuarioModificaNavigation)
                    .WithMany(p => p.tbReservacionRestaurantesReRe_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.ReRe_UsuarioModifica)
                    .HasConstraintName("FK_tbReservacionRestaurante_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Rest)
                    .WithMany(p => p.tbReservacionRestaurantes)
                    .HasForeignKey(d => d.Rest_ID)
                    .HasConstraintName("FK_tbReservacionRestaurante_tbRestaurante_Rest_ID");

                entity.HasOne(d => d.Resv)
                    .WithMany(p => p.tbReservacionRestaurantes)
                    .HasForeignKey(d => d.Resv_ID)
                    .HasConstraintName("FK_tbReservacionRestaurante_tbReservaciones_Resv_ID");
            });

            modelBuilder.Entity<tbReservacionTransporte>(entity =>
            {
                entity.HasKey(e => e.ReTr_ID)
                    .HasName("PK__tbReserv__BA5C74AC63712BFC");

                entity.ToTable("tbReservacionTransporte", "Resv");

                entity.Property(e => e.ReTr_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.ReTr_FechaCancelado).HasColumnType("date");

                entity.Property(e => e.ReTr_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReTr_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Detr)
                    .WithMany(p => p.tbReservacionTransporte)
                    .HasForeignKey(d => d.Detr_ID)
                    .HasConstraintName("FK_tbReservacionTransporte_tbDetallesTransportes_DeTr_ID");

                entity.HasOne(d => d.ReTr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbReservacionTransporteReTr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.ReTr_UsuarioCreacion)
                    .HasConstraintName("FK_tbReservacionTransporte_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.ReTr_UsuarioModificaNavigation)
                    .WithMany(p => p.tbReservacionTransporteReTr_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.ReTr_UsuarioModifica)
                    .HasConstraintName("FK_tbReservacionTransporte_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Resv)
                    .WithMany(p => p.tbReservacionTransporte)
                    .HasForeignKey(d => d.Resv_ID);
            });

            modelBuilder.Entity<tbReservaciones>(entity =>
            {
                entity.HasKey(e => e.Resv_ID)
                    .HasName("PK__tbReserv__0E88BC1165A19FFD");

                entity.ToTable("tbReservaciones", "Resv");

                entity.Property(e => e.Resv_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Resv_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Resv_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Resv_Precio)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.HasOne(d => d.Paqu)
                    .WithMany(p => p.tbReservaciones)
                    .HasForeignKey(d => d.Paqu_ID);

                entity.HasOne(d => d.Resv_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbReservacionesResv_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Resv_UsuarioCreacion)
                    .HasConstraintName("FK_tbReservaciones_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Resv_UsuarioModificaNavigation)
                    .WithMany(p => p.tbReservacionesResv_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Resv_UsuarioModifica)
                    .HasConstraintName("FK_tbReservaciones_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Usua)
                    .WithMany(p => p.tbReservacionesUsua)
                    .HasForeignKey(d => d.Usua_ID);
            });

            modelBuilder.Entity<tbReservacionesActividadesExtras>(entity =>
            {
                entity.HasKey(e => e.ReAE_ID)
                    .HasName("PK__tbReserv__4B5820A3816AA137");

                entity.ToTable("tbReservacionesActividadesExtras", "Resv");

                entity.Property(e => e.ReAE_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.ReAE_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReAE_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.ReAE_FechaReservacion).HasColumnType("date");

                entity.Property(e => e.ReAE_HoraReservacion)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.AcEx)
                    .WithMany(p => p.tbReservacionesActividadesExtras)
                    .HasForeignKey(d => d.AcEx_ID)
                    .HasConstraintName("FK_tbReservacionesActividadesExtras_tbActividadesExtras_HoAc_ID");

                entity.HasOne(d => d.ReAE_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbReservacionesActividadesExtrasReAE_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.ReAE_UsuarioCreacion)
                    .HasConstraintName("FK_tbReservacionesActividadesExtras_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.ReAE_UsuarioModificaNavigation)
                    .WithMany(p => p.tbReservacionesActividadesExtrasReAE_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.ReAE_UsuarioModifica)
                    .HasConstraintName("FK_tbReservacionesActividadesExtras_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Resv)
                    .WithMany(p => p.tbReservacionesActividadesExtras)
                    .HasForeignKey(d => d.Resv_ID);
            });

            modelBuilder.Entity<tbReservacionesActividadesHoteles>(entity =>
            {
                entity.HasKey(e => e.ReAH_ID)
                    .HasName("PK__tbReserv__E9CAB653464EFC82");

                entity.ToTable("tbReservacionesActividadesHoteles", "Resv");

                entity.Property(e => e.ReAH_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.ReAH_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReAH_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.ReAH_FechaReservacion).HasColumnType("date");

                entity.Property(e => e.ReAH_HoraReservacion)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.HoAc)
                    .WithMany(p => p.tbReservacionesActividadesHoteles)
                    .HasForeignKey(d => d.HoAc_ID);

                entity.HasOne(d => d.ReAH_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbReservacionesActividadesHotelesReAH_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.ReAH_UsuarioCreacion)
                    .HasConstraintName("FK_tbReservacionesActividadesHoteles_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.ReAH_UsuarioModificaNavigation)
                    .WithMany(p => p.tbReservacionesActividadesHotelesReAH_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.ReAH_UsuarioModifica)
                    .HasConstraintName("FK_tbReservacionesActividadesHoteles_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Resv)
                    .WithMany(p => p.tbReservacionesActividadesHoteles)
                    .HasForeignKey(d => d.Resv_ID);
            });

            modelBuilder.Entity<tbReservacionesDetalles>(entity =>
            {
                entity.HasKey(e => e.ReDe_ID)
                    .HasName("PK__tbReserv__E2709EF99AAED3AA");

                entity.ToTable("tbReservacionesDetalles", "Resv");

                entity.Property(e => e.ReDe_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.ReDe_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReDe_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Habi)
                    .WithMany(p => p.tbReservacionesDetalles)
                    .HasForeignKey(d => d.Habi_ID);

                entity.HasOne(d => d.ReDe_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbReservacionesDetallesReDe_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.ReDe_UsuarioCreacion)
                    .HasConstraintName("FK_tbReservacionesDetalles_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.ReDe_UsuarioModificaNavigation)
                    .WithMany(p => p.tbReservacionesDetallesReDe_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.ReDe_UsuarioModifica)
                    .HasConstraintName("FK_tbReservacionesDetalles_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.ReHo)
                    .WithMany(p => p.tbReservacionesDetalles)
                    .HasForeignKey(d => d.ReHo_ID);
            });

            modelBuilder.Entity<tbReservacionesHoteles>(entity =>
            {
                entity.HasKey(e => e.ReHo_ID)
                    .HasName("PK__tbReserv__9019459BF3D6CA13");

                entity.ToTable("tbReservacionesHoteles", "Resv");

                entity.Property(e => e.ReHo_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.ReHo_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReHo_FechaEntrada).HasColumnType("date");

                entity.Property(e => e.ReHo_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.ReHo_FechaSalida).HasColumnType("date");

                entity.Property(e => e.ReHo_PrecioTotal).HasColumnType("money");

                entity.HasOne(d => d.ReHo_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbReservacionesHotelesReHo_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.ReHo_UsuarioCreacion)
                    .HasConstraintName("FK_tbReservacionesHoteles_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.ReHo_UsuarioModificaNavigation)
                    .WithMany(p => p.tbReservacionesHotelesReHo_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.ReHo_UsuarioModifica)
                    .HasConstraintName("FK_tbReservacionesHoteles_tbUsuarios_Usuario_Modifica");

                entity.HasOne(d => d.Resv)
                    .WithMany(p => p.tbReservacionesHoteles)
                    .HasForeignKey(d => d.Resv_ID);
            });

            modelBuilder.Entity<tbRestaurantes>(entity =>
            {
                entity.HasKey(e => e.Rest_ID)
                    .HasName("PK__tbRestau__F9C25C974A3911A6");

                entity.ToTable("tbRestaurantes", "Rest");

                entity.Property(e => e.Rest_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Rest_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Rest_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Rest_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.Dire)
                    .WithMany(p => p.tbRestaurantes)
                    .HasForeignKey(d => d.Dire_ID)
                    .HasConstraintName("FK_tbRestaurantes_tbDirecciones_ID");

                entity.HasOne(d => d.Part)
                    .WithMany(p => p.tbRestaurantes)
                    .HasForeignKey(d => d.Part_ID);

                entity.HasOne(d => d.Rest_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRestaurantesRest_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Rest_UsuarioCreacion)
                    .HasConstraintName("FK_tbRestaurantes_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Rest_UsuarioModificaNavigation)
                    .WithMany(p => p.tbRestaurantesRest_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Rest_UsuarioModifica)
                    .HasConstraintName("FK_tbRestaurantes_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Role_ID)
                    .HasName("PK__tbRoles__D80AB49B49B39456");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Role_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Role_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Role_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Role_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Role_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRolesRole_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Role_UsuarioCreacion)
                    .HasConstraintName("FK_tbRoles_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Role_UsuarioModificaNavigation)
                    .WithMany(p => p.tbRolesRole_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Role_UsuarioModifica)
                    .HasConstraintName("FK_tbRoles_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbRolesPermisos>(entity =>
            {
                entity.HasKey(e => e.RoPe_ID)
                    .HasName("PK__tbRolesP__897DEC3297308135");

                entity.ToTable("tbRolesPermisos", "Acce");

                entity.Property(e => e.RoPe_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.RoPe_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RoPe_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.RoPe_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRolesPermisosRoPe_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.RoPe_UsuarioCreacion)
                    .HasConstraintName("FK_tbRolesPermisos_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.RoPe_UsuarioModificaNavigation)
                    .WithMany(p => p.tbRolesPermisosRoPe_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.RoPe_UsuarioModifica)
                    .HasConstraintName("FK_tbRolesPermisos_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbTipoMenus>(entity =>
            {
                entity.HasKey(e => e.Time_ID)
                    .HasName("PK__tbTipoMe__5D2DFC2AB85184EE");

                entity.ToTable("tbTipoMenus", "Rest");

                entity.Property(e => e.Time_Descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Time_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Time_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Time_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Time_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTipoMenusTime_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Time_UsuarioCreacion)
                    .HasConstraintName("FK_tbTipoMenus_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Time_UsuarioModificaNavigation)
                    .WithMany(p => p.tbTipoMenusTime_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Time_UsuarioModifica)
                    .HasConstraintName("FK_tbTipoMenus_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbTipoPartners>(entity =>
            {
                entity.HasKey(e => e.TiPar_Id);

                entity.ToTable("tbTipoPartners", "Gene");

                entity.Property(e => e.TiPar_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TiPar_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.TiPar_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TiPar_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbTipoPartners)
                    .HasForeignKey(d => d.Rol_Id);

                entity.HasOne(d => d.TiPar_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTipoPartnersTiPar_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.TiPar_UsuarioCreacion);

                entity.HasOne(d => d.TiPar_UsuarioModificaNavigation)
                    .WithMany(p => p.tbTipoPartnersTiPar_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.TiPar_UsuarioModifica);
            });

            modelBuilder.Entity<tbTiposActividades>(entity =>
            {
                entity.HasKey(e => e.TiAc_ID)
                    .HasName("PK__tbTiposA__A65FBF7D4B51E3F5");

                entity.ToTable("tbTiposActividades", "Actv");

                entity.Property(e => e.TiAc_Descripcion)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.TiAc_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.TiAc_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TiAc_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.TiAc_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTiposActividadesTiAc_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.TiAc_UsuarioCreacion);

                entity.HasOne(d => d.TiAc_UsuarioModificaNavigation)
                    .WithMany(p => p.tbTiposActividadesTiAc_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.TiAc_UsuarioModifica);
            });

            modelBuilder.Entity<tbTiposPagos>(entity =>
            {
                entity.HasKey(e => e.TiPa_ID)
                    .HasName("PK__tbTiposP__BF9C33414591D2FC");

                entity.ToTable("tbTiposPagos", "Sale");

                entity.Property(e => e.TiPa_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TiPa_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.TiPa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TiPa_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.TiPa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTiposPagosTiPa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.TiPa_UsuarioCreacion)
                    .HasConstraintName("FK_tbTiposPagos_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.TiPa_UsuarioModificaNavigation)
                    .WithMany(p => p.tbTiposPagosTiPa_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.TiPa_UsuarioModifica)
                    .HasConstraintName("FK_tbTiposPagos_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbTiposTransportes>(entity =>
            {
                entity.HasKey(e => e.TiTr_ID)
                    .HasName("PK__tbTiposT__A09FE06B9C635DCA");

                entity.ToTable("tbTiposTransportes", "Trpt");

                entity.Property(e => e.TiTr_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TiTr_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.TiTr_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TiTr_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.TiTr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTiposTransportesTiTr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.TiTr_UsuarioCreacion)
                    .HasConstraintName("FK_tbTiposTransportes_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.TiTr_UsuarioModificaNavigation)
                    .WithMany(p => p.tbTiposTransportesTiTr_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.TiTr_UsuarioModifica)
                    .HasConstraintName("FK_tbTiposTransportes_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbTransportes>(entity =>
            {
                entity.HasKey(e => e.Tprt_ID)
                    .HasName("PK__tbTransp__3B458E1CAEA1076C");

                entity.ToTable("tbTransportes", "Trpt");

                entity.Property(e => e.Tprt_ID).ValueGeneratedOnAdd();

                entity.Property(e => e.Tprt_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Tprt_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Tprt_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.Dire)
                    .WithMany(p => p.tbTransportes)
                    .HasForeignKey(d => d.Dire_ID);

                entity.HasOne(d => d.Part)
                    .WithMany(p => p.tbTransportes)
                    .HasForeignKey(d => d.Part_ID);

                entity.HasOne(d => d.Tprt)
                    .WithOne(p => p.tbTransportes)
                    .HasForeignKey<tbTransportes>(d => d.Tprt_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbTransportes_tbTiposTransportes_Ti_Tr_ID");

                entity.HasOne(d => d.Tprt_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTransportesTprt_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Tprt_UsuarioCreacion)
                    .HasConstraintName("FK_tbTransportes_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Tprt_UsuarioModificaNavigation)
                    .WithMany(p => p.tbTransportesTprt_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Tprt_UsuarioModifica)
                    .HasConstraintName("FK_tbTransportes_tbUsuarios_Usuario_Modifica");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.Usua_ID)
                    .HasName("PK__tbUsuari__E863C88E80AD0992");

                entity.ToTable("tbUsuarios", "Acce");

                entity.HasIndex(e => e.Usua_DNI, "UQ__tbUsuari__8B7503D52BB6FA37")
                    .IsUnique();

                entity.Property(e => e.Usua_Apellido)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_DNI)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_Estado).HasDefaultValueSql("('1')");

                entity.Property(e => e.Usua_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Usua_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Usua_FechaNaci).HasColumnType("date");

                entity.Property(e => e.Usua_Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_Password).IsUnicode(false);

                entity.Property(e => e.Usua_Salt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Usua_Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_Url)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.Dire)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Dire_ID);

                entity.HasOne(d => d.Part)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Part_ID);

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Role_ID);

                entity.HasOne(d => d.Usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.InverseUsua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Usua_UsuarioCreacion)
                    .HasConstraintName("FK_tbUsuarios_tbUsuarios_Usuario_Creacion");

                entity.HasOne(d => d.Usua_UsuarioModificaNavigation)
                    .WithMany(p => p.InverseUsua_UsuarioModificaNavigation)
                    .HasForeignKey(d => d.Usua_UsuarioModifica)
                    .HasConstraintName("FK_tbUsuarios_tbUsuarios_Usuario_Modifica");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}